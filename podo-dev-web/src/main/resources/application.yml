#Server Config
server:
  port: 28443
  http:
    port: 28080
  ssl:
    key-store: classpath:keystore.p12
    key-store-password: s12345
    keyStoreType: PKCS12
    keyAlias: tomcat


logging:
  #  file: logs/application.log
  level:
    root: INFO
#    org.hibernate.SQL: debug

decorator:
  datasource:
    p6spy:
      enable-logging: true
      multiline: false
      logging: slf4j
      #log-file: spy.log
      #log-format: # custom log format


spring:
  profiles:
    include: core

  # Data Resource
  datasource:
    url: jdbc:mysql://192.168.219.103:3307/podo_dev?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: podo
    password: s12345
    driver-class-name: com.mysql.jdbc.Driver

  # Hibernate config
  jpa:
    database: MYSQL
    hibernate:
      dialect: org.hibernate.dialect.MySQL5Dialect
    properties:
      hibernate:
        fomat_sql: true
        #        show_sql: true
        default_batch_fetch_size: 20


  # Servlet
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

## Blog Content Config
blog:
  relates:
    size: 6

  comment:
    per:
      page:
        size: 5 # Comment Paging Size
    max:
      depth: 3 # Comment Max Reply Depth
  per:
    page:
      size: 10 # Blog Paging Size


## File Save Config
local:
  static:
    url: /static
    dir: C://podo-dev/static
  upload:
    base:
      url: /uploaded
      dir: C://podo-dev/uploaded
    sub:
      file:
        dir: /blogs/files
      image:
        dir: /blogs/images



infra:

  ## Uploader Config
  uploader:
    token: mciGpOzzSvncQJ5IFEUNVODRyVkgL1kD
    upload:
      internal: http://192.168.219.103:38080/api/uploader/file # Loopback
      external: https://upload.podo-dev.com/api/uploader/file
    frontend:
      internal: http://192.168.219.103:30080
      external: https://file.podo-dev.com


  ## Telegram Config
  telegram:
    podo:
      bot:
        token: 451179803:AAF9iJVw93oSgK2d9LBgYuNe_XZTCdHpLzU
        name: PodoDevBot
      admin:
        id: 503609560

  ## Solr Config
  solr:
    url: http://192.168.219.103:8979/solr # Loopback
    core:
      id: podo-dev
    query:
      hl:
        pre:
          max:
            length: 100
        frag:
          length: 10000000
        simple:
          pre: ((start-search))
          post: ((end-search))



## Google Oauth
google:
  client:
    clientId: 644014618387-hd23qa0hrtqvbtnfb0u3c9o9q9duq970.apps.googleusercontent.com
    clientSecret: RxNajOBGU8TZtR-zc9pOu6uG
    accessTokenUri: https://www.googleapis.com/oauth2/v4/token
    userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
    clientAuthenticationScheme: form
    scope:
      - email
      - profile
  resource:
    userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo

security:
  expire:
    time: 24 # Hours
  oauth2:
    admin:
      ids: 116440278738014640765, 116491882380204991899
    #    redirect: http://localhost:3000
    redirect: https://www.podo-dev.com


---

spring:
  profiles: deploy
  jpa:
    show-sql: false

server:
  port: 8443
  http:
    port: 8080

logging:
  config: classpath:logback-daily.xml

decorator:
  datasource:
    p6spy:
      enable-logging: false

local:
  static:
    url: /static
    dir: /static
  upload:
    base:
      url: /uploaded
      dir: /uploaded

security:
  oauth2:
    admin:
    redirect: https://www.podo-dev.com

infra:
  telegram:
    podo:
      bot:
        token: 963473619:AAF1412LpXDNNvN7gn6qcip88-z_DVLVEVU

---

spring:
  profiles: external

  datasource:
    url: jdbc:mysql://125.186.242.83:8088/podo_dev?characterEncoding=UTF-8&serverTimezone=Asia/Seoul

infra:
  ## Uploader Config
  uploader:
    upload:
      internal: https://upload.podo-dev.com/api/uploader/file
      external: https://upload.podo-dev.com/api/uploader/file
    frontend:
      external: https://file.podo-dev.com

  solr:
    url: http://solr.podo-dev.com/solr

